{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/enums.ts","webpack:///./src/GameUI/components/Default/ProgressBar.jsx","webpack:///./src/GameUI/components/GameScreens/LoadingScreen/index.jsx","webpack:///./src/actions/appActions.js","webpack:///./src/GameUI/components/Default/Button.jsx","webpack:///./src/GameUI/components/GameScreens/MainMenu/index.jsx","webpack:///./src/GameUI/components/GameScreens/SettingsMenu/index.jsx","webpack:///./src/actions/settingsActions.js","webpack:///./src/reducers/gameReducer.js","webpack:///./src/reducers/appReducer.js","webpack:///./src/reducers/settingsReducer.js","webpack:///./src/reducers/loadingReducer.js","webpack:///./src/reducers/index.js","webpack:///./src/store.js","webpack:///./src/Game/GameLoop.ts","webpack:///./src/Game/levels/levels.ts","webpack:///./src/actions/loaderActions.js","webpack:///./src/Game/AssetLoader.ts","webpack:///./src/Game/gameObjects/Position.ts","webpack:///./src/Game/BoxCollider.ts","webpack:///./src/utils/random.js","webpack:///./src/Game/gameObjects/index.ts","webpack:///./src/Game/gameObjects/objects/Player.ts","webpack:///./src/Game/gameObjects/objects/Civilian.ts","webpack:///./src/Game/gameObjects/objects/CivilianSpawnPoint.ts","webpack:///./src/Game/gameObjects/objects/Trash.ts","webpack:///./src/Game/GameObjectFactory.ts","webpack:///./src/Game/TileMap.ts","webpack:///./src/Game/layers/TrashLayer.ts","webpack:///./src/Game/flags.ts","webpack:///./src/Game/layers/TileLayer.ts","webpack:///./src/Game/layers/GameObjectLayer.ts","webpack:///./src/Game/layers/CivilianLayer.ts","webpack:///./src/Game/Level.ts","webpack:///./src/Game/InputHandler.ts","webpack:///./src/actions/gameActions.js","webpack:///./src/Game/Game.ts","webpack:///./src/GameUI/components/GameScreens/LevelMenu/index.jsx","webpack:///./src/GameUI/components/GameScreens/Game/Popups/Pause.jsx","webpack:///./src/utils/displayTime.js","webpack:///./src/GameUI/components/GameScreens/Game/Popups/Score.jsx","webpack:///./src/GameUI/components/GameScreens/Game/Popups/index.jsx","webpack:///./src/GameUI/components/GameScreens/Game/index.jsx","webpack:///./src/utils/numberFormatter.js","webpack:///./src/GameUI/components/GameScreens/index.jsx","webpack:///./src/GameUI/components/App.jsx","webpack:///./src/index.ts","webpack:///./src/GameUI/index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Screens","Popups","GameEventIds","ObjectDirection","Keys","progress","description","className","style","width","render","LoadingScreen","state","loading","dispatch","Component","screen","type","payload","onClick","children","fullwidth","classes","join","role","onKeyDown","tabIndex","setScreen","LevelMenu","SettingsMenu","Loading","MainMenu","setVolume","v","volume","orientation","onChange","this","tooltip","min","max","step","settings","defaultState","active","currentPopup","None","score","time","activeScreen","game","action","app","reducers","fps","callback","isPlaying","frame","loop","tref","requestAnimationFrame","start","pause","cancelAnimationFrame","frameRate","reset","startLoading","onLoading","percentage","loadingCompleted","_tilesets","init","_loader","onStart","add","onLoad","onComplete","forEach","map","spritesheet","a","tileset","xml","tile","mapId","parseInt","$","id","image","source","load","store","e","getAssetByMapId","find","Error","getAssetById","resources","textures","getAnimationById","animations","x","y","speed","xSpeed","ySpeed","setDirection","direction","Up","Right","Down","Left","height","position","isInRadius","otherBoxCollider","radius","halfWidth","halfHeight","Math","floor","random","Player","arrowKeyDown","previousArrowKeyDown","keysDown","previousKeysDown","initTexture","initAnimation","sprite","boxCollider","pivot","animationSpeed","texture","assetLoader","animation","update","inputHandler","keyIsPressed","ArrowUp","currentLevel","collisionMap","objectCollides","ArrowRight","ArrowDown","ArrowLeft","SpaceBar","trashLayer","pickupTrash","previousDirection","toLowerCase","play","currentFrame","stop","destroy","resume","Civilian","trashSpawnDelay","directions","eventsMap","tilesWithIdAround","SidewalkArea","includes","playing","trySpawnTrash","CivilianSpawnPoint","spawnDelay","gameLoop","nearestEventWithId","civilianLayer","spawnCivilian","Trash","rotation","PI","props","tiles","tileSize","leftTileX","bottomTileY","rightTileX","topTileY","tileId","tileY","tileX","bottomY","topY","leftX","rightX","getRandomTileById","initialTrashAmount","trashSpawnChance","maxSpawnChance","increaseSpawnChance","trashSpawnIncreaseDelay","maxTrash","trash","index","spawnTrash","gameObjectFactory","container","addChild","stage","trashIdsInRadius","trashItem","filter","removeChild","FLIPPED_HORIZONTALLY_FLAG","FLIPPED_VERTICALLY_FLAG","FLIPPED_DIAGONALLY_FLAG","layers","tileMapLayers","tileMap","Array","fill","flippedHorizontally","flippedVertically","flippedDiagonally","gameObjects","activeGameObjects","objectId","gameObject","maxCivilians","civilians","civilian","level","minTrashToWin","objectsMap","tileLayer","gameObjectLayer","calculateScore","getScore","setScore","console","log","keyCode","onKeyUp","document","addEventListener","showPopup","popup","pauseGame","Pause","resumeGame","size","resize","nvw","nvh","vpw","innerWidth","vph","innerHeight","renderer","scale","set","pickLevel","Game","foundLevel","Score","getState","gameId","getElementById","backgroundColor","SCALE_MODE","NEAREST","appendChild","view","LevelItem","src","thumbnail","alt","seconds","sec","toString","padStart","GamePopups","icon","num","App"],"mappings":"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","file":"main.385a8821d885d5e7d44c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([519,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","enum Screens {\r\n  Loading,\r\n  MainMenu,\r\n  LevelMenu,\r\n  SettingsMenu,\r\n  Game\r\n}\r\n\r\nenum Popups {\r\n  None,\r\n  Pause,\r\n  Score\r\n}\r\n\r\nenum GameEventIds {\r\n  SidewalkArea = 1,\r\n  CivilianSpawnPoint = 2\r\n}\r\n\r\nenum ObjectDirection {\r\n  Up,\r\n  Down,\r\n  Left,\r\n  Right\r\n}\r\n\r\nenum Keys {\r\n  ArrowUp = 38,\r\n  ArrowDown = 40,\r\n  ArrowLeft = 37,\r\n  ArrowRight = 39,\r\n  SpaceBar = 32\r\n}\r\n\r\nexport { Screens, Popups, GameEventIds, ObjectDirection, Keys };\r\n","import React from 'react';\r\n\r\nconst ProgressBar = ({ progress, description }) => {\r\n  return (\r\n    <div className=\"progress-bar\">\r\n      <div className=\"progress-bar-display\" style={{ width: `${progress}%` }} />\r\n      <div className=\"progress-bar-text\">{description ? description(progress) : progress}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ProgressBar from '../../Default/ProgressBar';\r\n\r\n@connect(\r\n  state => ({\r\n    progress: state.loading.progress\r\n  }),\r\n  dispatch => ({\r\n    dispatch\r\n  })\r\n)\r\nclass LoadingScreen extends React.Component {\r\n  render() {\r\n    const { progress } = this.props;\r\n    return (\r\n      <div className=\"game-screen-content\">\r\n        <div className=\"game-screen-item game-screen-title\">Textures laden</div>\r\n        <div className=\"game-screen-item\">\r\n          <ProgressBar progress={progress} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoadingScreen;\r\n","export const setScreen = screen => {\r\n    return {\r\n        type: 'SET_SCREEN',\r\n        payload: screen\r\n    };\r\n};\r\n","import React from 'react';\r\n\r\nconst Button = ({ onClick, children, fullwidth, className }) => {\r\n  const classes = ['button'];\r\n\r\n  if (fullwidth) {\r\n    classes.push('full-width');\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      className={`${classes.join(' ')} ${className}`}\r\n      role=\"button\"\r\n      onKeyDown={onClick}\r\n      tabIndex={0}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setScreen } from '../../../../actions/appActions';\r\nimport { Screens } from '../../../../enums.ts';\r\nimport Button from '../../Default/Button';\r\n\r\n@connect(dispatch => ({\r\n  dispatch\r\n}))\r\nclass MainMenu extends React.Component {\r\n  setScreen = screen => {\r\n    const { dispatch } = this.props;\r\n    dispatch(setScreen(screen));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game-screen-content\">\r\n        <div className=\"game-screen-item game-screen-title\">Hoofdmenu</div>\r\n        <div className=\"game-screen-item\">\r\n          <Button\r\n            className=\"main-menu-levels-button\"\r\n            fullwidth\r\n            onClick={() => this.setScreen(Screens.LevelMenu)}\r\n          >\r\n            Levels\r\n          </Button>\r\n        </div>\r\n        <div className=\"game-screen-item\">\r\n          <Button\r\n            className=\"main-menu-settings-button\"\r\n            fullwidth\r\n            onClick={() => this.setScreen(Screens.SettingsMenu)}\r\n          >\r\n            Opties\r\n          </Button>\r\n        </div>\r\n        <div className=\"game-screen-item\">\r\n          <Button\r\n            className=\"main-menu-close-button\"\r\n            fullwidth\r\n            onClick={() => this.setScreen(Screens.Loading)}\r\n          >\r\n            Afsluiten\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainMenu;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Slider from 'react-rangeslider';\r\n\r\nimport { setVolume } from '../../../../actions/settingsActions';\r\nimport { setScreen } from '../../../../actions/appActions';\r\nimport { Screens } from '../../../../enums.ts';\r\nimport Button from '../../Default/Button';\r\n\r\n@connect(\r\n  state => ({\r\n    settings: state.settings\r\n  }),\r\n  dispatch => ({\r\n    dispatch\r\n  })\r\n)\r\nclass SettingsMenu extends React.Component {\r\n  setVolume = v => {\r\n    const { dispatch } = this.props;\r\n    dispatch(setVolume(v));\r\n  };\r\n\r\n  setScreen = screen => {\r\n    const { dispatch } = this.props;\r\n    dispatch(setScreen(screen));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      settings: { volume }\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"game-screen-content settings-menu\">\r\n        <div className=\"game-screen-item game-screen-title\">Opties</div>\r\n        <div className=\"game-screen-item\">\r\n          <span>{`Volume: ${volume}`}</span>\r\n          <Slider\r\n            className=\"settings-volume-rangeslider\"\r\n            value={volume}\r\n            orientation=\"horizontal\"\r\n            onChange={this.setVolume}\r\n            tooltip={false}\r\n            min={0}\r\n            max={100}\r\n            step={1}\r\n          />\r\n        </div>\r\n        <div className=\"game-screen-item\">\r\n          <Button\r\n            className=\"settings-menu-back-button\"\r\n            fullwidth\r\n            onClick={() => this.setScreen(Screens.MainMenu)}\r\n          >\r\n            Terug\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SettingsMenu;\r\n","export function setVolume(v) {\r\n  return {\r\n    type: 'SET_VOLUME',\r\n    payload: v\r\n  };\r\n}\r\n","import { Popups } from '../enums.ts';\r\n\r\nconst defaultState = {\r\n  active: false,\r\n  currentPopup: Popups.None,\r\n  score: 50,\r\n  time: 0\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_TIME':\r\n      return {\r\n        ...state,\r\n        time: action.payload\r\n      };\r\n    case 'SET_SCORE':\r\n      return {\r\n        ...state,\r\n        score: action.payload\r\n      };\r\n    case 'RESUME_GAME':\r\n      return {\r\n        ...state,\r\n        active: true\r\n      };\r\n    case 'PAUSE_GAME':\r\n      return {\r\n        ...state,\r\n        active: false\r\n      };\r\n    case 'SHOW_POPUP':\r\n      return {\r\n        ...state,\r\n        currentPopup: action.payload\r\n      };\r\n    case 'HIDE_POPUP':\r\n      return {\r\n        ...state,\r\n        currentPopup: Popups.None\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Screens } from '../enums.ts';\r\n\r\nconst defaultState = {\r\n  activeScreen: Screens.Loading\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_SCREEN':\r\n      return {\r\n        ...state,\r\n        activeScreen: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const defaultState = {\r\n  volume: 80\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_VOLUME':\r\n      return {\r\n        ...state,\r\n        volume: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const defaultState = {\r\n    progress: 0\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case 'START_LOADING':\r\n            return {\r\n                ...state,\r\n                progress: 0\r\n            };\r\n\r\n        case 'ON_LOADING':\r\n            return {\r\n                ...state,\r\n                progress: action.payload\r\n            };\r\n\r\n        case 'ON_LOADED':\r\n            return {\r\n                ...state,\r\n                progress: 100\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import game from './gameReducer';\r\nimport app from './appReducer';\r\nimport settings from './settingsReducer';\r\nimport loading from './loadingReducer';\r\n\r\nexport default {\r\n    game,\r\n    app,\r\n    settings,\r\n    loading\r\n};\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nimport reducers from './reducers';\r\n\r\nexport default createStore(combineReducers({ ...reducers }), applyMiddleware(thunk /* , logger */));\r\n","class GameLoop {\r\n  private isPlaying: boolean = false;\r\n  private tref;\r\n  private callback: Function;\r\n  public frame: number = -1;\r\n  public fps: number;\r\n\r\n  constructor(fps: number, callback: Function) {\r\n    this.fps = fps;\r\n    this.callback = callback;\r\n  }\r\n\r\n  private loop = (): void => {\r\n    this.frame++;\r\n    this.tref = requestAnimationFrame(this.loop);\r\n    this.callback(this.frame);\r\n  };\r\n\r\n  public start = (): void => {\r\n    if (!this.isPlaying) {\r\n      this.isPlaying = true;\r\n      this.tref = requestAnimationFrame(this.loop);\r\n    }\r\n  };\r\n\r\n  public pause = (): void => {\r\n    if (this.isPlaying) {\r\n      cancelAnimationFrame(this.tref);\r\n      this.isPlaying = false;\r\n    }\r\n  };\r\n\r\n  public frameRate = (fps: number): void => {\r\n    this.fps = fps;\r\n  };\r\n\r\n  public reset = (): void => {\r\n    this.pause();\r\n    this.frame = -1;\r\n  };\r\n}\r\n\r\nexport default GameLoop;\r\n","import IConfigLevel from './IConfigLevel';\r\nimport level1 from './level1/level1.json';\r\n\r\nconst levels: IConfigLevel[] = [level1];\r\n\r\nexport default levels;\r\n","import { Screens } from '../enums.ts';\r\nimport { setScreen } from './appActions';\r\n\r\nexport const startLoading = () => {\r\n  return {\r\n    type: 'START_LOADING'\r\n  };\r\n};\r\n\r\nexport const onLoading = percentage => {\r\n  return {\r\n    type: 'ON_LOADING',\r\n    payload: percentage\r\n  };\r\n};\r\n\r\nconst onLoaded = () => {\r\n  return {\r\n    type: 'ON_LOADED'\r\n  };\r\n};\r\n\r\nexport const loadingCompleted = () => {\r\n  return dispatch => {\r\n    dispatch(onLoaded());\r\n    dispatch(setScreen(Screens.LevelMenu /* MainMenu */));\r\n  };\r\n};\r\n","import * as PIXI from 'pixi.js';\r\nimport axios from 'axios';\r\nimport { parseStringPromise } from 'xml2js';\r\n\r\nimport store from '../store';\r\n\r\nimport { startLoading, onLoading, loadingCompleted } from '../actions/loaderActions';\r\n\r\nimport spritesheetTilesetMap from './assets/spritesheet_tileset_map.json';\r\n\r\nclass AssetLoader {\r\n  private _loader: PIXI.Loader;\r\n\r\n  private _tilesets: object = {};\r\n\r\n  public init = async (): Promise<void> => {\r\n    this._loader = new PIXI.Loader();\r\n\r\n    this._loader.onStart.add(this.onStart);\r\n    this._loader.onLoad.add(this.onLoad);\r\n    this._loader.onComplete.add(this.onComplete);\r\n\r\n    await spritesheetTilesetMap.forEach(async map => {\r\n      this._loader.add(map.spritesheet);\r\n      const tileset = await axios.get(map.tileset);\r\n\r\n      const xml = await parseStringPromise(tileset.data);\r\n\r\n      this._tilesets[map.spritesheet] = xml.tileset.tile.map(t => ({\r\n        mapId: parseInt(t.$.id, 10),\r\n        id: t.image[0].$.source\r\n      }));\r\n    });\r\n\r\n    this._loader.load();\r\n  };\r\n\r\n  private onStart = (): void => {\r\n    store.dispatch(startLoading());\r\n  };\r\n\r\n  private onLoad = (e): void => {\r\n    store.dispatch(onLoading(e.progress));\r\n  };\r\n\r\n  private onComplete = (): void => {\r\n    store.dispatch(loadingCompleted());\r\n  };\r\n\r\n  public getAssetByMapId = ({ tileset, mapId }): PIXI.Texture => {\r\n    const tileSetMap = this._tilesets[tileset];\r\n    const tile = tileSetMap.find(t => t.mapId === mapId);\r\n\r\n    if (!tile) throw new Error(`Tile with mapId: ${mapId} not found!`);\r\n\r\n    return this.getAssetById({ tileset, id: tile.id });\r\n  };\r\n\r\n  public getAssetById = ({ tileset, id }): PIXI.Texture =>\r\n    this._loader?.resources[tileset]?.spritesheet?.textures[id];\r\n\r\n  public getAnimationById = ({ tileset, id }): object =>\r\n    this._loader?.resources[tileset]?.spritesheet?.animations[id];\r\n}\r\n\r\nexport default AssetLoader;\r\n","import { ObjectDirection } from '../../enums';\r\n\r\nclass Position {\r\n  public x: number;\r\n  public y: number;\r\n  public xSpeed: number = 0;\r\n  public ySpeed: number = 0;\r\n  public speed: number;\r\n  public direction: ObjectDirection;\r\n\r\n  constructor({ x, y, speed = 1 }) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.speed = speed;\r\n  }\r\n\r\n  public setDirection = (direction: ObjectDirection): void => {\r\n    this.direction = direction;\r\n\r\n    if (direction === ObjectDirection.Up) {\r\n      this.xSpeed = 0;\r\n      this.ySpeed = -1;\r\n    }\r\n\r\n    if (direction === ObjectDirection.Right) {\r\n      this.xSpeed = 1;\r\n      this.ySpeed = 0;\r\n    }\r\n\r\n    if (direction === ObjectDirection.Down) {\r\n      this.xSpeed = 0;\r\n      this.ySpeed = 1;\r\n    }\r\n\r\n    if (direction === ObjectDirection.Left) {\r\n      this.xSpeed = -1;\r\n      this.ySpeed = 0;\r\n    }\r\n  };\r\n}\r\n\r\nexport default Position;\r\n","import Position from './gameObjects/Position';\r\n\r\nclass BoxCollider {\r\n  public position: Position;\r\n  public width: number;\r\n  public height: number;\r\n  public halfWidth: number;\r\n  public halfHeight: number;\r\n\r\n  constructor({ width, height, position }) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.position = position;\r\n\r\n    this.halfWidth = width / 2;\r\n    this.halfHeight = height / 2;\r\n  }\r\n\r\n  public isInRadius = (otherBoxCollider: BoxCollider, radius: number): boolean => {\r\n    return (\r\n      (otherBoxCollider.position.x - this.position.x) *\r\n        (otherBoxCollider.position.x - this.position.x) +\r\n        (otherBoxCollider.position.y - this.position.y) *\r\n          (otherBoxCollider.position.y - this.position.y) <=\r\n      radius * radius\r\n    );\r\n  };\r\n}\r\n\r\nexport default BoxCollider;\r\n","export default (min, max) => Math.floor(Math.random() * (max - min + 1) + min);\r\n","/* eslint-disable import/no-cycle */\r\nimport Player from './objects/Player';\r\nimport Civilian from './objects/Civilian';\r\nimport CivilianSpawnPoint from './objects/CivilianSpawnPoint';\r\nimport Trash from './objects/Trash';\r\n\r\nexport default {\r\n  Player,\r\n  Civilian,\r\n  CivilianSpawnPoint,\r\n  Trash\r\n};\r\n","/* eslint-disable import/no-cycle */\r\nimport * as PIXI from 'pixi.js';\r\n\r\nimport IGameObject from '../IGameObject';\r\nimport Position from '../Position';\r\nimport BoxCollider from '../../BoxCollider';\r\nimport { ObjectDirection, Keys } from '../../../enums';\r\n\r\nimport game from '../../Game';\r\n\r\nclass Player implements IGameObject {\r\n  public boxCollider: BoxCollider;\r\n  public width: number = 16;\r\n  public height: number = 16;\r\n\r\n  private sprite: PIXI.AnimatedSprite;\r\n  private textures = {};\r\n  private animations = {};\r\n\r\n  private direction: ObjectDirection;\r\n  private previousDirection: ObjectDirection;\r\n\r\n  private arrowKeyDown: boolean = false;\r\n  private previousArrowKeyDown: boolean = false;\r\n\r\n  private keysDown = {};\r\n  private previousKeysDown = {};\r\n\r\n  constructor({ x, y }) {\r\n    const position = new Position({ x, y, speed: 2 });\r\n    this.boxCollider = new BoxCollider({ width: 10, height: 14, position });\r\n  }\r\n\r\n  public init = (): PIXI.AnimatedSprite => {\r\n    this.initTexture('1_standing_left.png');\r\n    this.initTexture('1_standing_right.png');\r\n    this.initTexture('1_standing_up.png');\r\n    this.initTexture('1_standing_down.png');\r\n\r\n    this.initAnimation('1_walk_left');\r\n    this.initAnimation('1_walk_right');\r\n    this.initAnimation('1_walk_up');\r\n    this.initAnimation('1_walk_down');\r\n\r\n    const sprite: PIXI.AnimatedSprite = new PIXI.AnimatedSprite(this.animations['1_walk_down']);\r\n    sprite.x = this.boxCollider.position.x;\r\n    sprite.y = this.boxCollider.position.y;\r\n    sprite.pivot.x = 8; // Set center of rotation to the center of the sprite\r\n    sprite.pivot.y = 8; // Set center of rotation to the center of the sprite\r\n    sprite.animationSpeed = 0.1;\r\n    this.sprite = sprite;\r\n\r\n    return this.sprite;\r\n  };\r\n\r\n  private initTexture = (id: string): void => {\r\n    const texture = game.assetLoader.getAssetById({\r\n      tileset: 'img/sprites/kenney_rpg_characters/kenney_rpg_characters.json',\r\n      id\r\n    });\r\n\r\n    this.textures[id] = texture;\r\n  };\r\n\r\n  private initAnimation = (id: string): void => {\r\n    const animation = game.assetLoader.getAnimationById({\r\n      tileset: 'img/sprites/kenney_rpg_characters/kenney_rpg_characters.json',\r\n      id\r\n    });\r\n\r\n    this.animations[id] = animation;\r\n  };\r\n\r\n  public update = (): void => {\r\n    this.arrowKeyDown = false;\r\n\r\n    this.keysDown = game.inputHandler.keysDown;\r\n\r\n    if (\r\n      game.inputHandler.keyIsPressed(Keys.ArrowUp) &&\r\n      !game.currentLevel.collisionMap.objectCollides(this.boxCollider, ObjectDirection.Up)\r\n    ) {\r\n      this.boxCollider.position.y -= 1 * this.boxCollider.position.speed;\r\n      this.direction = ObjectDirection.Up;\r\n      this.arrowKeyDown = true;\r\n    }\r\n\r\n    if (\r\n      game.inputHandler.keyIsPressed(Keys.ArrowRight) &&\r\n      !game.currentLevel.collisionMap.objectCollides(this.boxCollider, ObjectDirection.Right)\r\n    ) {\r\n      this.boxCollider.position.x += 1 * this.boxCollider.position.speed;\r\n      this.direction = ObjectDirection.Right;\r\n      this.arrowKeyDown = true;\r\n    }\r\n\r\n    if (\r\n      game.inputHandler.keyIsPressed(Keys.ArrowDown) &&\r\n      !game.currentLevel.collisionMap.objectCollides(this.boxCollider, ObjectDirection.Down)\r\n    ) {\r\n      this.boxCollider.position.y += 1 * this.boxCollider.position.speed;\r\n      this.direction = ObjectDirection.Down;\r\n      this.arrowKeyDown = true;\r\n    }\r\n\r\n    if (\r\n      game.inputHandler.keyIsPressed(Keys.ArrowLeft) &&\r\n      !game.currentLevel.collisionMap.objectCollides(this.boxCollider, ObjectDirection.Left)\r\n    ) {\r\n      this.boxCollider.position.x -= 1 * this.boxCollider.position.speed;\r\n      this.direction = ObjectDirection.Left;\r\n      this.arrowKeyDown = true;\r\n    }\r\n\r\n    if (\r\n      game.inputHandler.keyIsPressed(Keys.SpaceBar) &&\r\n      !(Keys.SpaceBar in this.previousKeysDown)\r\n    ) {\r\n      game.currentLevel.trashLayer.pickupTrash(this.boxCollider);\r\n    }\r\n\r\n    if (this.direction !== this.previousDirection) {\r\n      this.sprite.textures = this.animations[\r\n        `1_walk_${ObjectDirection[this.direction].toLowerCase()}`\r\n      ];\r\n      this.sprite.play();\r\n    }\r\n\r\n    if (!this.arrowKeyDown && (this.sprite.currentFrame === 1 || this.sprite.currentFrame === 3)) {\r\n      this.sprite.stop();\r\n    } else if (this.previousArrowKeyDown !== this.arrowKeyDown) {\r\n      this.sprite.play();\r\n    }\r\n\r\n    this.previousDirection = this.direction;\r\n    this.previousArrowKeyDown = this.arrowKeyDown;\r\n    this.previousKeysDown = { ...this.keysDown };\r\n  };\r\n\r\n  public render = (): void => {\r\n    this.sprite.x = this.boxCollider.position.x;\r\n    this.sprite.y = this.boxCollider.position.y;\r\n  };\r\n\r\n  public destroy = (): void => {\r\n    this.sprite.destroy();\r\n  };\r\n\r\n  public pause = (): void => {\r\n    this.sprite.stop();\r\n  };\r\n\r\n  public resume = (): void => {};\r\n}\r\n\r\nexport default Player;\r\n","/* eslint-disable import/no-cycle */\r\nimport * as PIXI from 'pixi.js';\r\n\r\nimport IGameObject from '../IGameObject';\r\nimport BoxCollider from '../../BoxCollider';\r\nimport Position from '../Position';\r\nimport game from '../../Game';\r\nimport random from '../../../utils/random';\r\nimport { GameEventIds, ObjectDirection } from '../../../enums';\r\n\r\nclass Civilian implements IGameObject {\r\n  public boxCollider: BoxCollider;\r\n\r\n  private type: number;\r\n  private sprite: PIXI.AnimatedSprite;\r\n  private animations: object = {};\r\n  private trashSpawnDelay: number = 300;\r\n\r\n  constructor({ x, y }) {\r\n    // Set position with random speed\r\n    const position = new Position({ x, y, speed: random(75, 125) / 100 });\r\n    // Set object size for collision detection\r\n    this.boxCollider = new BoxCollider({ width: 16, height: 16, position });\r\n  }\r\n\r\n  public init = (): PIXI.AnimatedSprite => {\r\n    // Get random character\r\n    this.type = random(2, 6);\r\n\r\n    this.initAnimation(`${this.type}_walk_left`);\r\n    this.initAnimation(`${this.type}_walk_right`);\r\n    this.initAnimation(`${this.type}_walk_up`);\r\n    this.initAnimation(`${this.type}_walk_down`);\r\n\r\n    const sprite = new PIXI.AnimatedSprite(this.animations[`${this.type}_walk_down`]); // Create new pixi AnimatedSprite from initialized animation\r\n    sprite.x = this.boxCollider.position.x; // Initial x\r\n    sprite.y = this.boxCollider.position.y; // Initial y\r\n    sprite.pivot.x = 8; // Set center of rotation to the center of the sprite\r\n    sprite.pivot.y = 8; // Set center of rotation to the center of the sprite\r\n    sprite.animationSpeed = 0.1;\r\n    sprite.play();\r\n    this.sprite = sprite;\r\n\r\n    return this.sprite;\r\n  };\r\n\r\n  private initAnimation = (id: string): void => {\r\n    const animation = game.assetLoader.getAnimationById({\r\n      tileset: 'img/sprites/kenney_rpg_characters/kenney_rpg_characters.json',\r\n      id\r\n    });\r\n\r\n    this.animations[id] = animation;\r\n  };\r\n\r\n  public update = (): void => {\r\n    // Find possible directions for AI\r\n    const directions = game.currentLevel.eventsMap.tilesWithIdAround(\r\n      this.boxCollider,\r\n      GameEventIds.SidewalkArea\r\n    );\r\n\r\n    // Check if some possible directions are found\r\n    if (directions && directions.length) {\r\n      // Keep moving in same direction 99 out of 100 times or find a new direction\r\n      if (!directions.includes(this.boxCollider.position.direction) || Math.random() > 0.99) {\r\n        // Update to new direction\r\n        this.boxCollider.position.setDirection(directions[random(0, directions.length)]);\r\n\r\n        // Animation based on new direction\r\n        switch (this.boxCollider.position.direction) {\r\n          case ObjectDirection.Up:\r\n            this.sprite.textures = this.animations[`${this.type}_walk_up`];\r\n            break;\r\n          case ObjectDirection.Down:\r\n            this.sprite.textures = this.animations[`${this.type}_walk_down`];\r\n            break;\r\n          case ObjectDirection.Left:\r\n            this.sprite.textures = this.animations[`${this.type}_walk_left`];\r\n            break;\r\n          case ObjectDirection.Right:\r\n            this.sprite.textures = this.animations[`${this.type}_walk_right`];\r\n            break;\r\n        }\r\n\r\n        // Start animation\r\n        if (!this.sprite.playing) this.sprite.play();\r\n      }\r\n\r\n      // Update position with new position\r\n      this.boxCollider.position.x +=\r\n        this.boxCollider.position.speed * this.boxCollider.position.xSpeed;\r\n      this.boxCollider.position.y +=\r\n        this.boxCollider.position.speed * this.boxCollider.position.ySpeed;\r\n\r\n      // Try to spawn trash\r\n      game.currentLevel.trashLayer.trySpawnTrash(\r\n        this.boxCollider.position.x,\r\n        this.boxCollider.position.y\r\n      );\r\n    }\r\n  };\r\n\r\n  public render = (): void => {\r\n    // Render sprite at right x,y coordinates\r\n    this.sprite.x = this.boxCollider.position.x;\r\n    this.sprite.y = this.boxCollider.position.y;\r\n  };\r\n\r\n  public destroy = (): void => {\r\n    // Remove sprite from PixiJS\r\n    this.sprite.destroy();\r\n  };\r\n\r\n  public pause = (): void => {\r\n    // Stop animation on pause\r\n    this.sprite.stop();\r\n  };\r\n\r\n  public resume = (): void => {\r\n    // Start animation on resume\r\n    this.sprite.play();\r\n  };\r\n}\r\n\r\nexport default Civilian;\r\n","/* eslint-disable import/no-cycle */\r\nimport IGameObject from '../IGameObject';\r\nimport Position from '../Position';\r\nimport BoxCollider from '../../BoxCollider';\r\n\r\nimport game from '../../Game';\r\n\r\nimport { GameEventIds } from '../../../enums';\r\n\r\nclass CivilianSpawnPoint implements IGameObject {\r\n  public boxCollider: BoxCollider;\r\n  public width: number = 16;\r\n  public height: number = 16;\r\n  private spawnDelay: number;\r\n\r\n  constructor({ x, y, spawnDelay }) {\r\n    const position = new Position({ x, y });\r\n    this.boxCollider = new BoxCollider({ width: 16, height: 16, position });\r\n\r\n    this.spawnDelay = spawnDelay;\r\n  }\r\n\r\n  public init = (): void => {};\r\n\r\n  public update = (): void => {\r\n    if (!(game.gameLoop.frame % this.spawnDelay)) {\r\n      if (Math.random() > 0.9) {\r\n        const position = game.currentLevel.eventsMap.nearestEventWithId({\r\n          x: this.boxCollider.position.x,\r\n          y: this.boxCollider.position.y,\r\n          id: GameEventIds.SidewalkArea\r\n        });\r\n\r\n        game.currentLevel.civilianLayer.spawnCivilian(position);\r\n      }\r\n    }\r\n  };\r\n\r\n  public render = (): void => {};\r\n\r\n  public destroy = (): void => {};\r\n\r\n  public pause = (): void => {};\r\n\r\n  public resume = (): void => {};\r\n}\r\n\r\nexport default CivilianSpawnPoint;\r\n","/* eslint-disable import/no-cycle */\r\nimport * as PIXI from 'pixi.js';\r\n\r\nimport IGameObject from '../IGameObject';\r\nimport BoxCollider from '../../BoxCollider';\r\nimport Position from '../Position';\r\nimport game from '../../Game';\r\nimport random from '../../../utils/random';\r\n\r\nclass Trash implements IGameObject {\r\n  public boxCollider: BoxCollider;\r\n  public id: number;\r\n  public sprite: PIXI.Sprite;\r\n\r\n  private type: number;\r\n  private rotation: number;\r\n\r\n  constructor({ x, y, id }) {\r\n    this.id = id;\r\n    const position = new Position({ x, y });\r\n    this.boxCollider = new BoxCollider({ width: 8, height: 8, position });\r\n  }\r\n\r\n  public init = (): PIXI.Sprite => {\r\n    // Get random character type\r\n    this.type = random(1, 12);\r\n    this.rotation = random(0, 360) * (Math.PI / 180);\r\n\r\n    const texture: PIXI.Texture = game.assetLoader.getAssetById({\r\n      tileset: 'img/sprites/kenney_rpg_urban_city/kenney_rpg_urban_city.json',\r\n      id: `trash_${this.type}.png`\r\n    });\r\n    const sprite = new PIXI.Sprite(texture);\r\n    sprite.rotation = this.rotation;\r\n    sprite.x = this.boxCollider.position.x;\r\n    sprite.y = this.boxCollider.position.y;\r\n    sprite.pivot.x = 4; // Set center of rotation to the center of the sprite\r\n    sprite.pivot.y = 4; // Set center of rotation to the center of the sprite\r\n    this.sprite = sprite;\r\n\r\n    return this.sprite;\r\n  };\r\n\r\n  public update = (): void => {};\r\n\r\n  public render = (): void => {\r\n    this.sprite.x = this.boxCollider.position.x;\r\n    this.sprite.y = this.boxCollider.position.y;\r\n  };\r\n\r\n  public destroy = (): void => {\r\n    this.sprite.destroy();\r\n  };\r\n\r\n  public pause = (): void => {};\r\n\r\n  public resume = (): void => {};\r\n}\r\n\r\nexport default Trash;\r\n","/* eslint-disable import/no-cycle */\r\nimport gameObjects from './gameObjects';\r\n\r\nimport IGameObject from './gameObjects/IGameObject';\r\n\r\nclass GameObjectFactory {\r\n  public create = ({ name, ...props }): IGameObject => {\r\n    if (!(name in gameObjects)) throw new Error(`gameObject with name: ${name} not found.`);\r\n\r\n    return new gameObjects[name](props);\r\n  };\r\n}\r\n\r\nexport default GameObjectFactory;\r\n","import BoxCollider from './BoxCollider';\r\nimport { ObjectDirection } from '../enums';\r\nimport Position from './gameObjects/Position';\r\nimport random from '../utils/random';\r\n\r\nclass TileMap {\r\n  public tiles: number[];\r\n  private width: number;\r\n  private tileSize: number;\r\n\r\n  constructor({ tiles, width, tileSize }) {\r\n    this.tiles = tiles;\r\n    this.width = width;\r\n    this.tileSize = tileSize;\r\n  }\r\n\r\n  public objectCollides = (boxCollider: BoxCollider, direction: ObjectDirection): boolean => {\r\n    switch (direction) {\r\n      case ObjectDirection.Up: {\r\n        const leftTileX: number = Math.floor(\r\n          (boxCollider.position.x - boxCollider.halfWidth) / this.tileSize\r\n        );\r\n        const bottomTileY: number = Math.floor(\r\n          (boxCollider.position.y - (boxCollider.halfHeight + boxCollider.position.speed)) /\r\n            this.tileSize\r\n        );\r\n        const rightTileX: number = Math.floor(\r\n          (boxCollider.position.x + boxCollider.halfWidth) / this.tileSize\r\n        );\r\n\r\n        return (\r\n          !!this.tiles[bottomTileY * this.width + leftTileX] ||\r\n          !!this.tiles[bottomTileY * this.width + rightTileX]\r\n        );\r\n      }\r\n\r\n      case ObjectDirection.Right: {\r\n        const rightTileX: number = Math.floor(\r\n          (boxCollider.position.x + boxCollider.halfWidth + boxCollider.position.speed) /\r\n            this.tileSize\r\n        );\r\n        const bottomTileY: number = Math.floor(\r\n          (boxCollider.position.y - boxCollider.halfHeight) / this.tileSize\r\n        );\r\n        const topTileY: number = Math.floor(\r\n          (boxCollider.position.y + boxCollider.halfHeight) / this.tileSize\r\n        );\r\n\r\n        return (\r\n          !!this.tiles[bottomTileY * this.width + rightTileX] ||\r\n          !!this.tiles[topTileY * this.width + rightTileX]\r\n        );\r\n      }\r\n\r\n      case ObjectDirection.Down: {\r\n        const leftTileX: number = Math.floor(\r\n          (boxCollider.position.x - boxCollider.halfWidth) / this.tileSize\r\n        );\r\n        const topTileY: number = Math.floor(\r\n          (boxCollider.position.y + boxCollider.halfHeight + boxCollider.position.speed) /\r\n            this.tileSize\r\n        );\r\n        const rightTileX: number = Math.floor(\r\n          (boxCollider.position.x + boxCollider.halfWidth) / this.tileSize\r\n        );\r\n\r\n        return (\r\n          !!this.tiles[topTileY * this.width + leftTileX] ||\r\n          !!this.tiles[topTileY * this.width + rightTileX]\r\n        );\r\n      }\r\n      case ObjectDirection.Left: {\r\n        const leftTileX: number = Math.floor(\r\n          (boxCollider.position.x - boxCollider.halfWidth - boxCollider.position.speed) /\r\n            this.tileSize\r\n        );\r\n        const bottomTileY: number = Math.floor(\r\n          (boxCollider.position.y - boxCollider.halfHeight) / this.tileSize\r\n        );\r\n        const topTileY: number = Math.floor(\r\n          (boxCollider.position.y + boxCollider.halfHeight) / this.tileSize\r\n        );\r\n\r\n        return (\r\n          !!this.tiles[bottomTileY * this.width + leftTileX] ||\r\n          !!this.tiles[topTileY * this.width + leftTileX]\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  public tilesWithIdAround = (boxCollider: BoxCollider, tileId: number): ObjectDirection[] => {\r\n    const tileY: number = Math.floor(boxCollider.position.y / this.tileSize);\r\n    const tileX: number = Math.floor(boxCollider.position.x / this.tileSize);\r\n\r\n    const bottomY: number = Math.floor(\r\n      (boxCollider.position.y + boxCollider.halfWidth + boxCollider.position.speed) / this.tileSize\r\n    );\r\n\r\n    const topY: number = Math.floor(\r\n      (boxCollider.position.y - boxCollider.halfWidth - boxCollider.position.speed) / this.tileSize\r\n    );\r\n\r\n    const leftX: number = Math.floor(\r\n      (boxCollider.position.x - boxCollider.halfWidth - boxCollider.position.speed) / this.tileSize\r\n    );\r\n\r\n    const rightX: number = Math.floor(\r\n      (boxCollider.position.x + boxCollider.halfWidth + boxCollider.position.speed) / this.tileSize\r\n    );\r\n\r\n    const directions: ObjectDirection[] = [];\r\n\r\n    if (this.tiles[topY * this.width + tileX] === tileId) {\r\n      directions.push(ObjectDirection.Up);\r\n    }\r\n\r\n    if (this.tiles[tileY * this.width + rightX] === tileId) {\r\n      directions.push(ObjectDirection.Right);\r\n    }\r\n\r\n    if (this.tiles[bottomY * this.width + tileX] === tileId) {\r\n      directions.push(ObjectDirection.Down);\r\n    }\r\n\r\n    if (this.tiles[tileY * this.width + leftX] === tileId) {\r\n      directions.push(ObjectDirection.Left);\r\n    }\r\n\r\n    return directions;\r\n  };\r\n\r\n  public nearestEventWithId = ({ x, y, id }) => {\r\n    const tileX = Math.floor(x / this.tileSize);\r\n    const tileY = Math.floor(y / this.tileSize);\r\n\r\n    if (this.tiles[tileY * this.width + tileX + 1] === id) {\r\n      return {\r\n        x: (tileX + 1) * this.tileSize + this.tileSize / 2,\r\n        y: tileY * this.tileSize + this.tileSize / 2\r\n      };\r\n    }\r\n\r\n    if (this.tiles[tileY * this.width + tileX - 1] === id) {\r\n      return {\r\n        x: (tileX - 1) * this.tileSize + this.tileSize / 2,\r\n        y: tileY * this.tileSize + this.tileSize / 2\r\n      };\r\n    }\r\n\r\n    if (this.tiles[(tileY + 1) * this.width + tileX] === id) {\r\n      return {\r\n        x: tileX * this.tileSize + this.tileSize / 2,\r\n        y: (tileY + 1) * this.tileSize + this.tileSize / 2\r\n      };\r\n    }\r\n\r\n    if (this.tiles[(tileY - 1) * this.width + tileX] === id) {\r\n      return {\r\n        x: tileX * this.tileSize + this.tileSize / 2,\r\n        y: (tileY - 1) * this.tileSize + this.tileSize / 2\r\n      };\r\n    }\r\n\r\n    throw Error(`No event with id: ${id} found around x: ${x} y: ${y}`);\r\n  };\r\n\r\n  public getRandomTileById = (id): Position => {\r\n    const tile: number = random(0, this.tiles.length - 1);\r\n\r\n    if (this.tiles[tile] === id) {\r\n      const tileX = tile % this.width;\r\n      const tileY = Math.floor((tile + 1) / this.width);\r\n      return new Position({\r\n        x: tileX * this.tileSize + random(0, 1600) / 100,\r\n        y: tileY * this.tileSize + random(0, 1600) / 100\r\n      });\r\n    }\r\n\r\n    return this.getRandomTileById(id);\r\n  };\r\n}\r\n\r\nexport default TileMap;\r\n","/* eslint-disable import/no-cycle */\r\nimport * as PIXI from 'pixi.js';\r\n\r\nimport ILayer from './ILayer';\r\nimport IGameObject from '../gameObjects/IGameObject';\r\nimport game from '../Game';\r\nimport BoxCollider from '../BoxCollider';\r\nimport Trash from '../gameObjects/objects/Trash';\r\nimport { GameEventIds } from '../../enums';\r\n\r\nclass TrashLayer implements ILayer {\r\n  public container: PIXI.Container;\r\n  public trash: IGameObject[] = [];\r\n\r\n  private index: number = 0;\r\n  private initialTrashAmount: number;\r\n  private trashSpawnChance: number;\r\n  private maxSpawnChance: number;\r\n  private increaseSpawnChance: number;\r\n  private trashSpawnIncreaseDelay: number;\r\n  private maxTrash: number;\r\n\r\n  constructor({\r\n    initialTrashAmount,\r\n    trashSpawnChance,\r\n    maxSpawnChance,\r\n    increaseSpawnChance,\r\n    trashSpawnIncreaseDelay,\r\n    maxTrash\r\n  }) {\r\n    this.initialTrashAmount = initialTrashAmount;\r\n    this.trashSpawnChance = trashSpawnChance;\r\n    this.maxSpawnChance = maxSpawnChance;\r\n    this.increaseSpawnChance = increaseSpawnChance;\r\n    this.trashSpawnIncreaseDelay = trashSpawnIncreaseDelay;\r\n    this.maxTrash = maxTrash;\r\n\r\n    this.container = new PIXI.Container();\r\n    game.game.stage.addChild(this.container);\r\n\r\n    for (let i = 0; i < this.initialTrashAmount; i += 1) {\r\n      const position = game.currentLevel.eventsMap.getRandomTileById(GameEventIds.SidewalkArea);\r\n      this.spawnTrash(position.x, position.y);\r\n    }\r\n  }\r\n\r\n  public update = (): void => {\r\n    for (let i = 0; i < this.trash.length; i += 1) {\r\n      this.trash[i].update();\r\n    }\r\n  };\r\n\r\n  public render = (): void => {\r\n    for (let i = 0; i < this.trash.length; i += 1) {\r\n      this.trash[i].render();\r\n    }\r\n  };\r\n\r\n  public pause = (): void => {\r\n    for (let i = 0; i < this.trash.length; i += 1) {\r\n      this.trash[i].pause();\r\n    }\r\n  };\r\n\r\n  public resume = (): void => {\r\n    for (let i = 0; i < this.trash.length; i += 1) {\r\n      this.trash[i].resume();\r\n    }\r\n  };\r\n\r\n  public trySpawnTrash = (x, y): void => {\r\n    if (Math.random() > this.trashSpawnChance) {\r\n      // Spawnrate 1 out of 10\r\n      this.spawnTrash(x, y);\r\n    }\r\n\r\n    if (\r\n      this.trashSpawnChance > this.maxSpawnChance &&\r\n      !(game.gameLoop.frame % this.trashSpawnIncreaseDelay)\r\n    ) {\r\n      this.trashSpawnChance -= this.increaseSpawnChance;\r\n    }\r\n  };\r\n\r\n  private spawnTrash = (x, y): void => {\r\n    if (this.trash.length >= this.maxTrash) return;\r\n    const trash: IGameObject = game.gameObjectFactory.create({\r\n      name: 'Trash',\r\n      x,\r\n      y,\r\n      id: this.index += 1\r\n    });\r\n\r\n    const sprite = trash.init() as PIXI.Sprite;\r\n    this.container.addChild(sprite);\r\n\r\n    this.trash.push(trash);\r\n  };\r\n\r\n  public pickupTrash(otherBoxCollider: BoxCollider): void {\r\n    const trashIdsInRadius: number[] = [];\r\n    for (let i = 0; i < this.trash.length; i += 1) {\r\n      if (this.trash[i].boxCollider.isInRadius(otherBoxCollider, 20)) {\r\n        const trashItem = this.trash[i] as Trash;\r\n        trashIdsInRadius.push(trashItem.id);\r\n      }\r\n    }\r\n\r\n    this.trash = this.trash.filter(t => {\r\n      const trashItem = t as Trash;\r\n      if (trashIdsInRadius.includes(trashItem.id)) {\r\n        this.container.removeChild(trashItem.sprite);\r\n        trashItem.destroy();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n}\r\n\r\nexport default TrashLayer;\r\n","export const FLIPPED_HORIZONTALLY_FLAG = 0x80000000;\r\nexport const FLIPPED_VERTICALLY_FLAG = 0x40000000;\r\nexport const FLIPPED_DIAGONALLY_FLAG = 0x20000000;\r\n","/* eslint-disable import/no-cycle */\r\nimport * as PIXI from 'pixi.js';\r\n\r\nimport ILayer from './ILayer';\r\nimport game from '../Game';\r\nimport {\r\n  FLIPPED_HORIZONTALLY_FLAG,\r\n  FLIPPED_VERTICALLY_FLAG,\r\n  FLIPPED_DIAGONALLY_FLAG\r\n} from '../flags';\r\n\r\nclass TileLayer implements ILayer {\r\n  public container: PIXI.Container;\r\n\r\n  private layers: number;\r\n  private width: number;\r\n  private height: number;\r\n  private tileMapLayers: number[][];\r\n  private tileMap: PIXI.Sprite[][];\r\n  private tileset: string;\r\n  private tileSize: number;\r\n\r\n  constructor({ layers, width, height, tileMapLayers, tileset, tileSize }) {\r\n    this.layers = layers;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.tileMapLayers = tileMapLayers;\r\n    this.tileMap = new Array(this.layers).fill([]);\r\n    this.tileset = tileset;\r\n    this.tileSize = tileSize;\r\n\r\n    this.container = new PIXI.Container();\r\n    game.game.stage.addChild(this.container);\r\n\r\n    for (let l = 0; l < this.layers; l += 1) {\r\n      for (let y = 0; y < this.height; y += 1) {\r\n        for (let x = 0; x < this.width; x += 1) {\r\n          // Get tile rotations with hex flags\r\n          let tileId = this.tileMapLayers[l][y * this.width + x];\r\n          let rotation = 0;\r\n\r\n          // Check if the sprite is flipped in any angle\r\n          const flippedHorizontally = tileId & FLIPPED_HORIZONTALLY_FLAG;\r\n          const flippedVertically = tileId & FLIPPED_VERTICALLY_FLAG;\r\n          const flippedDiagonally = tileId & FLIPPED_DIAGONALLY_FLAG;\r\n\r\n          // Set the right angle in radians based on 'flipped' booleans from above\r\n          if (flippedVertically && flippedDiagonally) {\r\n            // 270 deg\r\n            rotation = Math.PI * 1.5;\r\n          } else if (flippedHorizontally && flippedVertically) {\r\n            // 180 deg\r\n            rotation = Math.PI;\r\n          } else if (flippedHorizontally && flippedDiagonally) {\r\n            // 90 deg\r\n            rotation = Math.PI * 0.5;\r\n          }\r\n\r\n          // Remove flags from tileId to get the actual tileId\r\n          tileId &= ~(\r\n            FLIPPED_HORIZONTALLY_FLAG |\r\n            FLIPPED_VERTICALLY_FLAG |\r\n            FLIPPED_DIAGONALLY_FLAG\r\n          );\r\n\r\n          if (tileId) {\r\n            const texture = game.assetLoader.getAssetByMapId({\r\n              tileset: this.tileset,\r\n              mapId: tileId - 1\r\n            }); // get texture by tileId\r\n            const sprite = new PIXI.Sprite(texture);\r\n            sprite.x = x * this.tileSize + this.tileSize / 2; // add pivot to position and multiply by tileSize\r\n            sprite.y = y * this.tileSize + this.tileSize / 2; // add pivot to position and multiply by tileSize\r\n            sprite.pivot.x = this.tileSize / 2; // Set center of rotation to the center of the sprite\r\n            sprite.pivot.y = this.tileSize / 2; // Set center of rotation to the center of the sprite\r\n            sprite.rotation = rotation;\r\n            this.container.addChild(sprite);\r\n            this.tileMap[l].push(sprite);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public update = (): void => {};\r\n\r\n  public render = (): void => {\r\n    for (let l = 0; l < this.layers; l += 1) {\r\n      for (let y = 0; y < this.height; y += 1) {\r\n        for (let x = 0; x < this.width; x += 1) {\r\n          this.tileMap[l][y * this.width + x].x = x * this.tileSize + this.tileSize / 2;\r\n          this.tileMap[l][y * this.width + x].y = y * this.tileSize + this.tileSize / 2;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  public pause = (): void => {};\r\n\r\n  public resume = (): void => {};\r\n}\r\n\r\nexport default TileLayer;\r\n","/* eslint-disable import/no-cycle */\r\nimport * as PIXI from 'pixi.js';\r\n\r\nimport ILayer from './ILayer';\r\nimport game from '../Game';\r\nimport IConfigGameObject from '../gameObjects/IConfigGameObject';\r\nimport IGameObject from '../gameObjects/IGameObject';\r\nimport { GameEventIds } from '../../enums';\r\n\r\nclass GameObjectLayer implements ILayer {\r\n  public container: PIXI.Container;\r\n\r\n  private gameObjects: IConfigGameObject[];\r\n  private height: number;\r\n  private width: number;\r\n  private tileSize: number;\r\n\r\n  private activeGameObjects: IGameObject[] = [];\r\n\r\n  constructor({ gameObjects, height, width, tileSize }) {\r\n    this.gameObjects = gameObjects;\r\n    this.height = height;\r\n    this.width = width;\r\n    this.tileSize = tileSize;\r\n\r\n    this.container = new PIXI.Container();\r\n    game.game.stage.addChild(this.container);\r\n\r\n    // Spawn gameobjects defined in Tiled\r\n    for (let y = 0; y < this.height; y += 1) {\r\n      for (let x = 0; x < this.width; x += 1) {\r\n        const objectId = game.currentLevel.eventsMap.tiles[y * this.width + x];\r\n\r\n        if (objectId && objectId === GameEventIds.CivilianSpawnPoint) {\r\n          const object = game.gameObjectFactory.create({\r\n            name: 'CivilianSpawnPoint',\r\n            x: x * this.tileSize + this.tileSize / 2,\r\n            y: y * this.tileSize + this.tileSize / 2,\r\n            spawnDelay: 300\r\n          });\r\n\r\n          const sprite = object.init() as PIXI.Sprite | PIXI.AnimatedSprite;\r\n          if (sprite) this.container.addChild(sprite);\r\n\r\n          this.activeGameObjects.push(object);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Spawn gameobjects defined in level.json\r\n    this.gameObjects.forEach(gameObject => {\r\n      const object: IGameObject = game.gameObjectFactory.create({\r\n        name: gameObject.name,\r\n        ...gameObject.props\r\n      });\r\n\r\n      const sprite = object.init() as PIXI.Sprite | PIXI.AnimatedSprite;\r\n      if (sprite) this.container.addChild(sprite);\r\n\r\n      this.activeGameObjects.push(object);\r\n    });\r\n  }\r\n\r\n  public update = (): void => {\r\n    for (let i = 0; i < this.activeGameObjects.length; i += 1) {\r\n      this.activeGameObjects[i].update();\r\n    }\r\n  };\r\n\r\n  public render = (): void => {\r\n    for (let i = 0; i < this.activeGameObjects.length; i += 1) {\r\n      this.activeGameObjects[i].render();\r\n    }\r\n  };\r\n\r\n  public pause = (): void => {\r\n    for (let i = 0; i < this.activeGameObjects.length; i += 1) {\r\n      this.activeGameObjects[i].pause();\r\n    }\r\n  };\r\n\r\n  public resume = (): void => {\r\n    for (let i = 0; i < this.activeGameObjects.length; i += 1) {\r\n      this.activeGameObjects[i].resume();\r\n    }\r\n  };\r\n}\r\n\r\nexport default GameObjectLayer;\r\n","/* eslint-disable import/no-cycle */\r\nimport * as PIXI from 'pixi.js';\r\n\r\nimport ILayer from './ILayer';\r\nimport IGameObject from '../gameObjects/IGameObject';\r\nimport game from '../Game';\r\n\r\nclass CivilianLayer implements ILayer {\r\n  public container: PIXI.Container;\r\n\r\n  private civilians: IGameObject[] = [];\r\n  private maxCivilians: number;\r\n\r\n  constructor({ maxCivilians }) {\r\n    this.maxCivilians = maxCivilians;\r\n\r\n    this.container = new PIXI.Container();\r\n    game.game.stage.addChild(this.container);\r\n  }\r\n\r\n  public update = (): void => {\r\n    for (let i = 0; i < this.civilians.length; i += 1) {\r\n      this.civilians[i].update();\r\n    }\r\n  };\r\n\r\n  public render = (): void => {\r\n    for (let i = 0; i < this.civilians.length; i += 1) {\r\n      this.civilians[i].render();\r\n    }\r\n  };\r\n\r\n  public pause = (): void => {\r\n    for (let i = 0; i < this.civilians.length; i += 1) {\r\n      this.civilians[i].pause();\r\n    }\r\n  };\r\n\r\n  public resume = (): void => {\r\n    for (let i = 0; i < this.civilians.length; i += 1) {\r\n      this.civilians[i].resume();\r\n    }\r\n  };\r\n\r\n  public spawnCivilian = ({ x, y }): void => {\r\n    if (this.civilians.length >= this.maxCivilians) return;\r\n    const civilian: IGameObject = game.gameObjectFactory.create({\r\n      name: 'Civilian',\r\n      x,\r\n      y\r\n    });\r\n\r\n    const sprite = civilian.init() as PIXI.Sprite | PIXI.AnimatedSprite;\r\n    if (sprite) this.container.addChild(sprite);\r\n\r\n    this.civilians.push(civilian);\r\n  };\r\n}\r\n\r\nexport default CivilianLayer;\r\n","/* eslint-disable import/no-cycle */\r\nimport game from './Game';\r\nimport TileMap from './TileMap';\r\nimport TrashLayer from './layers/TrashLayer';\r\nimport TileLayer from './layers/TileLayer';\r\nimport GameObjectLayer from './layers/GameObjectLayer';\r\nimport CivilianLayer from './layers/CivilianLayer';\r\nimport IConfigLevel from './levels/IConfigLevel';\r\nimport ILayer from './layers/ILayer';\r\n\r\nclass Level {\r\n  private tileLayer: TileLayer;\r\n  public trashLayer: TrashLayer;\r\n  public civilianLayer: CivilianLayer;\r\n  private gameObjectLayer: GameObjectLayer;\r\n\r\n  private maxTrash: number;\r\n  private minTrashToWin: number;\r\n\r\n  private layers: ILayer[];\r\n\r\n  public collisionMap: TileMap;\r\n  public eventsMap: TileMap;\r\n\r\n  public init = (level: IConfigLevel): void => {\r\n    this.maxTrash = level.maxTrash;\r\n    this.minTrashToWin = level.minTrashToWin;\r\n\r\n    this.collisionMap = new TileMap({\r\n      tiles: level.collisionMap,\r\n      width: level.width,\r\n      tileSize: level.tileSize\r\n    });\r\n    this.eventsMap = new TileMap({\r\n      tiles: level.objectsMap,\r\n      width: level.width,\r\n      tileSize: level.tileSize\r\n    });\r\n\r\n    this.tileLayer = new TileLayer(level);\r\n    this.trashLayer = new TrashLayer(level);\r\n    this.civilianLayer = new CivilianLayer(level);\r\n    this.gameObjectLayer = new GameObjectLayer(level);\r\n\r\n    this.layers = [this.tileLayer, this.trashLayer, this.civilianLayer, this.gameObjectLayer];\r\n  };\r\n\r\n  public update = (): void => {\r\n    for (let i = 0; i < this.layers.length; i += 1) {\r\n      this.layers[i].update();\r\n    }\r\n\r\n    // update score\r\n    if (!(game.gameLoop.frame % game.gameLoop.fps)) {\r\n      const score = this.calculateScore();\r\n      if (game.getScore() !== score) {\r\n        game.setScore(score);\r\n        console.log(score, this.trashLayer.trash.length);\r\n      }\r\n    }\r\n  };\r\n\r\n  public render = (): void => {\r\n    for (let i = 0; i < this.layers.length; i += 1) {\r\n      this.layers[i].render();\r\n    }\r\n  };\r\n\r\n  public pause = (): void => {\r\n    for (let i = 0; i < this.layers.length; i += 1) {\r\n      this.layers[i].pause();\r\n    }\r\n  };\r\n\r\n  public resume = (): void => {\r\n    for (let i = 0; i < this.layers.length; i += 1) {\r\n      this.layers[i].resume();\r\n    }\r\n  };\r\n\r\n  private calculateScore = (): number => {\r\n    if (this.trashLayer.trash.length > this.maxTrash) return 0;\r\n    const score =\r\n      ((this.maxTrash - this.trashLayer.trash.length) *\r\n        (this.maxTrash / (this.maxTrash - this.minTrashToWin))) /\r\n      10;\r\n    return score > 100 ? 100 : score;\r\n  };\r\n}\r\n\r\nexport default Level;\r\n","class InputHandler {\r\n  public keysDown = {};\r\n\r\n  constructor() {\r\n    document.addEventListener('keydown', this.onKeyDown);\r\n    document.addEventListener('keyup', this.onKeyUp);\r\n  }\r\n\r\n  private onKeyDown = (e): void => {\r\n    this.keysDown[e.keyCode] = true;\r\n  };\r\n\r\n  private onKeyUp = (e): void => {\r\n    delete this.keysDown[e.keyCode];\r\n  };\r\n\r\n  public keyIsPressed = (key: number): boolean => key in this.keysDown;\r\n}\r\n\r\nexport default InputHandler;\r\n","import { Popups } from '../enums.ts';\r\n\r\nexport function setScore(score) {\r\n  return {\r\n    type: 'SET_SCORE',\r\n    payload: score\r\n  };\r\n}\r\n\r\nexport function setTime(time) {\r\n  return {\r\n    type: 'SET_TIME',\r\n    payload: time\r\n  };\r\n}\r\n\r\nfunction pauseGameAction() {\r\n  return {\r\n    type: 'PAUSE_GAME'\r\n  };\r\n}\r\n\r\nexport function showPopup(popup) {\r\n  return {\r\n    type: 'SHOW_POPUP',\r\n    payload: popup\r\n  };\r\n}\r\n\r\nexport const pauseGame = () => {\r\n  return dispatch => {\r\n    dispatch(pauseGameAction());\r\n    dispatch(showPopup(Popups.Pause));\r\n  };\r\n};\r\n\r\nfunction resumeGameAction() {\r\n  return {\r\n    type: 'RESUME_GAME'\r\n  };\r\n}\r\n\r\nexport function hidePopup() {\r\n  return {\r\n    type: 'HIDE_POPUP'\r\n  };\r\n}\r\n\r\nexport const resumeGame = () => {\r\n  return dispatch => {\r\n    dispatch(resumeGameAction());\r\n    dispatch(hidePopup());\r\n  };\r\n};\r\n","/* eslint-disable import/no-cycle */\r\nimport * as PIXI from 'pixi.js';\r\n\r\nimport store from '../store';\r\nimport { setScreen } from '../actions/appActions';\r\nimport { Screens, Popups } from '../enums';\r\nimport GameLoop from './GameLoop';\r\nimport levels from './levels/levels';\r\nimport IConfigLevel from './levels/IConfigLevel';\r\nimport AssetLoader from './AssetLoader';\r\nimport GameObjectFactory from './GameObjectFactory';\r\nimport Level from './Level';\r\nimport InputHandler from './InputHandler';\r\nimport { pauseGame, resumeGame, setTime, setScore, showPopup } from '../actions/gameActions';\r\n\r\nconst size = [960, 512];\r\nconst fps = 60;\r\n\r\nclass Game {\r\n  public gameLoop: GameLoop;\r\n  public game: PIXI.Application;\r\n  public assetLoader: AssetLoader;\r\n  public gameObjectFactory: GameObjectFactory;\r\n  public currentLevel: Level;\r\n  public inputHandler: InputHandler;\r\n\r\n  public async init(): Promise<void> {\r\n    const gameId = document.getElementById('game');\r\n\r\n    this.game = new PIXI.Application({\r\n      backgroundColor: 0x1099bb\r\n    });\r\n\r\n    // PIXI Settings\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST; // Display pixelart correctly\r\n\r\n    // Auto resize window\r\n    this.resize();\r\n    window.addEventListener('resize', this.resize);\r\n\r\n    if (gameId) gameId.appendChild(this.game.view);\r\n\r\n    this.assetLoader = new AssetLoader();\r\n    await this.assetLoader.init();\r\n\r\n    this.gameObjectFactory = new GameObjectFactory();\r\n\r\n    this.inputHandler = new InputHandler();\r\n\r\n    this.gameLoop = new GameLoop(fps, this.loop);\r\n  }\r\n\r\n  private loop = (frame: number): void => {\r\n    this.update(frame);\r\n    this.render();\r\n  };\r\n\r\n  private update = (frame): void => {\r\n    this.currentLevel.update();\r\n\r\n    // Update time every second\r\n    if (frame % fps === 0) {\r\n      store.dispatch(setTime(frame / fps));\r\n    }\r\n  };\r\n\r\n  private render = (): void => {\r\n    this.currentLevel.render();\r\n  };\r\n\r\n  private resize = (): void => {\r\n    const vpw: number = window.innerWidth;\r\n    const vph: number = window.innerHeight;\r\n    let nvw: number;\r\n    let nvh: number;\r\n\r\n    if (vph / vpw < size[1] / size[0]) {\r\n      nvh = vph;\r\n      nvw = (nvh * size[0]) / size[1];\r\n    } else {\r\n      nvw = vpw;\r\n      nvh = (nvw * size[1]) / size[0];\r\n    }\r\n\r\n    this.game.renderer.resize(nvw, nvh);\r\n\r\n    this.game.stage.scale.set(nvw / size[0], nvh / size[1]);\r\n  };\r\n\r\n  public pickLevel = (id: number): void => {\r\n    this.gameLoop.pause();\r\n\r\n    store.dispatch(setScreen(Screens.Game));\r\n    store.dispatch(resumeGame());\r\n\r\n    const foundLevel: IConfigLevel = levels.find(l => l.id === id) as IConfigLevel;\r\n\r\n    this.currentLevel = new Level();\r\n    this.currentLevel.init(foundLevel);\r\n\r\n    this.gameLoop.start();\r\n  };\r\n\r\n  public pause = (): void => {\r\n    this.gameLoop.pause();\r\n    this.currentLevel.pause();\r\n    store.dispatch(pauseGame());\r\n  };\r\n\r\n  public resume = (): void => {\r\n    this.gameLoop.start();\r\n    this.currentLevel.resume();\r\n    store.dispatch(resumeGame());\r\n  };\r\n\r\n  public setScore = (score): void => {\r\n    store.dispatch(setScore(score));\r\n\r\n    if (score >= 100) {\r\n      this.pause();\r\n      store.dispatch(showPopup(Popups.Score));\r\n    }\r\n  };\r\n\r\n  public getScore = (): number => {\r\n    return store.getState().game.score;\r\n  };\r\n}\r\n\r\nexport default new Game();\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport game from '../../../../Game/Game.ts';\r\n\r\nimport levels from '../../../../Game/levels/levels.ts';\r\nimport { Screens } from '../../../../enums.ts';\r\nimport { setScreen } from '../../../../actions/appActions';\r\nimport Button from '../../Default/Button';\r\n\r\nconst LevelItem = ({ level }) => (\r\n  <div\r\n    className=\"game-screen-level-item\"\r\n    onClick={() => game.pickLevel(level.id)}\r\n    role=\"button\"\r\n    tabIndex={0}\r\n  >\r\n    <div className=\"game-screen-level-item-content\">\r\n      <div className=\"game-screen-level-thumbnail\">\r\n        <img src={level.thumbnail} alt={level.name} />\r\n      </div>\r\n      <div className=\"game-screen-level-name\">{level.name}</div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n@connect(dispatch => ({\r\n  dispatch\r\n}))\r\nclass LevelMenu extends React.Component {\r\n  setScreen = screen => {\r\n    const { dispatch } = this.props;\r\n    dispatch(setScreen(screen));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game-screen-content level-menu\">\r\n        <div className=\"game-screen-item game-screen-title\">Levels</div>\r\n        <div className=\"game-screen-level-picker\">\r\n          {levels.map(level => (\r\n            <LevelItem level={level} key={level.id} />\r\n          ))}\r\n        </div>\r\n        <div className=\"game-screen-item\">\r\n          <Button\r\n            className=\"level-picker-mainmenu-button\"\r\n            fullwidth\r\n            onClick={() => this.setScreen(Screens.MainMenu)}\r\n          >\r\n            Terug\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LevelMenu;\r\n","import React from 'react';\r\n\r\nimport Button from '../../../Default/Button';\r\nimport game from '../../../../../Game/Game.ts';\r\nimport { Screens } from '../../../../../enums.ts';\r\n\r\nconst Pause = ({ setScreen }) => (\r\n  <div className=\"pause-popup\">\r\n    <h1>Pauze</h1>\r\n    <div className=\"pause-popup-buttons\">\r\n      <div className=\"popup-button-container\">\r\n        <Button className=\"popup-button-resume\" onClick={game.resume}>\r\n          Verder spelen\r\n        </Button>\r\n      </div>\r\n      <div className=\"popup-button-container\">\r\n        <Button className=\"popup-button-mainmenu\" onClick={() => setScreen(Screens.MainMenu)}>\r\n          Hoofdmenu\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Pause;\r\n","const displayTime = seconds => {\r\n  const min = Math.floor(seconds / 60);\r\n  const sec = seconds - min * 60;\r\n\r\n  return `${min.toString().padStart(2, '0')}:${sec.toString().padStart(2, '0')}`;\r\n};\r\n\r\nexport default displayTime;\r\n","import React from 'react';\r\n\r\nimport Button from '../../../Default/Button';\r\nimport { Screens } from '../../../../../enums.ts';\r\nimport displayTime from '../../../../../utils/displayTime';\r\n\r\nconst Score = ({ game, setScreen }) => (\r\n  <div className=\"pause-popup\">\r\n    <h1>Gewonnen!</h1>\r\n    <p>{`Tijd: ${displayTime(game.time)}`}</p>\r\n    <p>{`Score: ${game.score}%`}</p>\r\n    <div className=\"pause-popup-buttons\">\r\n      <div className=\"popup-button-container\">\r\n        <Button className=\"popup-button-mainmenu\" onClick={() => setScreen(Screens.MainMenu)}>\r\n          Hoofdmenu\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Score;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setScreen } from '../../../../../actions/appActions';\r\nimport { Popups } from '../../../../../enums.ts';\r\n\r\nimport Pause from './Pause';\r\nimport Score from './Score';\r\n\r\n@connect(\r\n  state => ({\r\n    game: state.game\r\n  }),\r\n  dispatch => ({\r\n    dispatch\r\n  })\r\n)\r\nclass GamePopups extends React.Component {\r\n  setScreen = screen => {\r\n    const { dispatch } = this.props;\r\n    dispatch(setScreen(screen));\r\n  };\r\n\r\n  render() {\r\n    const { game } = this.props;\r\n    let popup;\r\n\r\n    switch (game.currentPopup) {\r\n      case Popups.Pause:\r\n        popup = <Pause setScreen={this.setScreen} />;\r\n        break;\r\n      case Popups.Score:\r\n        popup = <Score setScreen={this.setScreen} game={game} />;\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"game-popup\">\r\n        <div className=\"game-popup-container\">{popup}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GamePopups;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../Default/Button';\r\nimport ProgressBar from '../../Default/ProgressBar';\r\nimport game from '../../../../Game/Game.ts';\r\nimport GamePopups from './Popups';\r\nimport displayTime from '../../../../utils/displayTime';\r\nimport numberFormatter from '../../../../utils/numberFormatter';\r\n\r\n@connect(\r\n  state => ({\r\n    game: state.game\r\n  }),\r\n  dispatch => ({\r\n    dispatch\r\n  })\r\n)\r\nclass Game extends React.Component {\r\n  render() {\r\n    const {\r\n      game: { score, time }\r\n    } = this.props;\r\n\r\n    let icon = '';\r\n\r\n    if (score < 20) {\r\n      icon = 'icon-astonished-face';\r\n    } else if (score < 40) {\r\n      icon = 'icon-sad-face';\r\n    } else if (score < 60) {\r\n      icon = 'icon-neutral-face';\r\n    } else if (score < 80) {\r\n      icon = 'icon-smiling-face';\r\n    } else {\r\n      icon = 'icon-laughing-face';\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-overlay-ui\">\r\n          <div className=\"top-bar\">\r\n            <Button onClick={game.pause}>\r\n              <i className=\"icon-pause\" />\r\n            </Button>\r\n          </div>\r\n          <div className=\"bottom-bar\">\r\n            <div className=\"bottom-bar-progress\">\r\n              <div className=\"bottom-bar-progress-bar\">\r\n                <ProgressBar progress={score} description={v => `${numberFormatter(v)}%`} />\r\n              </div>\r\n              <div className=\"bottom-bar-progress-icon\">\r\n                <i className={icon} />\r\n              </div>\r\n            </div>\r\n            <div className=\"bottom-bar-time\">{`Tijd: ${displayTime(time)}`}</div>\r\n          </div>\r\n        </div>\r\n        <GamePopups />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","export default num => Math.floor(num);\r\n","import React from 'react';\r\n\r\nimport { Screens } from '../../../enums.ts';\r\n\r\nimport LoadingScreen from './LoadingScreen';\r\nimport MainMenu from './MainMenu';\r\nimport SettingsMenu from './SettingsMenu';\r\nimport LevelMenu from './LevelMenu';\r\nimport Game from './Game';\r\n\r\nconst GameScreens = ({ activeScreen }) => {\r\n  let screen = null;\r\n\r\n  if (activeScreen === Screens.Loading) {\r\n    screen = <LoadingScreen />;\r\n  }\r\n\r\n  if (activeScreen === Screens.MainMenu) {\r\n    screen = <MainMenu />;\r\n  }\r\n\r\n  if (activeScreen === Screens.LevelMenu) {\r\n    screen = <LevelMenu />;\r\n  }\r\n\r\n  if (activeScreen === Screens.SettingsMenu) {\r\n    screen = <SettingsMenu />;\r\n  }\r\n\r\n  if (activeScreen === Screens.Game) {\r\n    return <Game />;\r\n  }\r\n\r\n  return <div className=\"game-screen\">{screen}</div>;\r\n};\r\n\r\nexport default GameScreens;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport GameScreens from './GameScreens';\r\n\r\n@connect(\r\n  state => ({\r\n    activeScreen: state.app.activeScreen\r\n  }),\r\n  dispatch => ({\r\n    dispatch\r\n  })\r\n)\r\nclass App extends React.Component {\r\n  render() {\r\n    const { activeScreen } = this.props;\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <div id=\"game\" className=\"game\" />\r\n        <GameScreens activeScreen={activeScreen} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import 'babel-polyfill';\r\n\r\nimport GameUI from './GameUI/index';\r\nimport game from './Game/Game';\r\n\r\nconst gameUI = new GameUI();\r\n\r\ngameUI.render();\r\ngame.init();\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './components/App';\r\n\r\nimport store from '../store';\r\n\r\n// styles\r\nimport './assets/styles/style.scss';\r\n\r\nclass GameUI {\r\n  render() {\r\n    ReactDOM.render(\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>,\r\n      document.getElementById('root')\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameUI;\r\n"],"sourceRoot":""}